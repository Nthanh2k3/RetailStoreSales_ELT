{"timestamp":"2025-08-17T17:27:33.314645","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-17T17:27:33.315124","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/MySQL_to_RDS_migration_raw_zone.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-17T17:27:33.372166Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:33.372289Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:33.372425Z","level":"info","event":"Current task name:migrate_store_visits","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:33.372496Z","level":"info","event":"Dag name:Rawzone_Migration","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:33.375149","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-17T17:27:33.383022","level":"info","event":"Connection Retrieved 'mysql_default'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-17T17:27:33.383144","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-08-17T17:27:33.388032","level":"info","event":"Running statement: SHOW COLUMNS FROM `retail_store_db`.`store_visits`, parameters: None","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-08-17T17:27:33.389963","level":"info","event":"Rows affected: 4","logger":"airflow.task.hooks.airflow.providers.mysql.hooks.mysql.MySqlHook"}
{"timestamp":"2025-08-17T17:27:33.397769","level":"info","event":"Connection Retrieved 'pg_raw'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-17T17:27:33.397920","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-17T17:27:33.404056","level":"info","event":"Connection Retrieved 'pg_raw'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-17T17:27:38.310721","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:479: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-08-17T17:27:41.351866Z","level":"info","event":"[OK] Migrated store_visits (10000 rows).","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:41.352838","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-17T17:27:41.374777Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:41.374909Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-17T17:27:41.375044Z","level":"info","event":"Task operator:<Task(PythonOperator): migrate_store_visits>","chan":"stdout","logger":"task"}
