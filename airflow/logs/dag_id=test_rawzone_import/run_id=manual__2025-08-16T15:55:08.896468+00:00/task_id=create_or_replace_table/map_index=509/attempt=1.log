{"timestamp":"2025-08-16T15:57:48.640998","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-16T15:57:48.641553","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/raw_zone_migration.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-16T15:57:48.714082Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:48.714221Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:48.715905Z","level":"info","event":"Current task name:create_or_replace_table","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:48.715984Z","level":"info","event":"Dag name:test_rawzone_import","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:48.717961","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-16T15:57:48.722484","level":"info","event":"Connection Retrieved 'pg_raw'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-16T15:57:48.722595","level":"warning","event":"This setter is for backward compatibility and should not be used.\nSince the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.\n* apache-airflow-providers-mysql<5.7.1\n* apache-airflow-providers-elasticsearch<5.5.1\n* apache-airflow-providers-postgres<5.13.0","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-16T15:57:51.555483","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"UniqueViolation","exc_value":"duplicate key value violates unique constraint \"pg_type_typname_nsp_index\"\nDETAIL:  Key (typname, typnamespace)=(tax_rules, 32795) already exists.\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/decorator.py","lineno":251,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/raw_zone_migration.py","lineno":119,"name":"create_or_replace_table"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-16T15:57:51.556452Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:51.558496Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:51.558614Z","level":"info","event":"Task:<Task(_PythonDecoratedOperator): create_or_replace_table>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:51.558723Z","level":"info","event":"Failure caused by duplicate key value violates unique constraint \"pg_type_typname_nsp_index\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:51.558785Z","level":"info","event":"DETAIL:  Key (typname, typnamespace)=(tax_rules, 32795) already exists.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-16T15:57:51.558823Z","level":"info","event":"","chan":"stdout","logger":"task"}
